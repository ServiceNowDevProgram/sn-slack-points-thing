<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil) {
	/* widget controller */
	var c = this;

	$scope.serverUpdate = function(){
		c.server.update();
	}

	spUtil.recordWatch($scope, "x_snc_slack_points_point", "", function(name) {
		if (name.data.operation == "insert") {
			c.server.update();
		}
		//console.log(name); //Returns information about the event that has occurred
		//console.log(name.data); //Returns the data inserted or updated on the table
	});

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.result-container {
 margin-top: 10px;
}

.all-users:first-child {
  font-size: xxx-large;
}

.all-users:nth-child(2) {
  font-size: xx-large;
}

.all-users:nth-child(3) {
  font-size: x-large;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>points_leaderboard_recent</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Points Leaderboard Recent</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	//If there is an input, search the database, otherwise display top 20

	if (input != null && input.keywords){
		data.items = getUsers(input.keywords);
	}	else {
		data.items = getLeaderboard();
		if (data.items[0]) { data.items[0].name = data.items[0].name + ""; }
		if (data.items[1]) { data.items[1].name = data.items[1].name + ""; }
		if (data.items[2]) { data.items[2].name = data.items[2].name + ""; }
		for (var i = 0; i < 6; i++) {
			if (data.items[i+3]) {
				data.items[i+3].name = data.items[i+3].name + "⭐";
			}
		}
	}

	function getUsers(keywords) {
		var slack_user = new GlideRecord('x_snc_slack_points_slack_user');
		//slack_user.addQuery('user_name', 'CONTAINS', keywords);
		//slack_user.addQuery('IR_AND_OR_QUERY', keywords);
		slack_user.addEncodedQuery('user_idLIKE' + keywords + '^ORuser_nameLIKE' + keywords);
		slack_user.setLimit(100);
		//slack_user.orderByDesc("ir_query_score");
		//slack_user.orderByDesc("points");
		slack_user.query();
		var results = [];
		while (slack_user.next()) {
			var usercount = new GlideAggregate('x_snc_slack_points_point');
			usercount.addEncodedQuery('sys_created_onONLast 3 months@javascript:gs.beginningOfLast3Months()@javascript:gs.endOfLast3Months()');
			usercount.addQuery('target', slack_user.getUniqueValue());
			usercount.addAggregate('COUNT');
			usercount.query();
			if (usercount.next()){
				var result = {};
				//result.name = slack_user.getDisplayValue('user_id');
				// Updated to get correct username rather than unique ID
				if (slack_user.getValue('user_name')){
					result.name = slack_user.getValue('user_name');
				} else {
					result.name = slack_user.getValue('user_id');
				}
				result.points = usercount.getAggregate('COUNT');
				results.push(result);
			}
		}
		return results;
	}

	function getLeaderboard() {
		var items = [];
		var count = new GlideAggregate('x_snc_slack_points_point');
		count.addEncodedQuery('sys_created_onONLast 3 months@javascript:gs.beginningOfLast3Months()@javascript:gs.endOfLast3Months()');
		count.orderByAggregate('COUNT', 'target');
		count.addAggregate('COUNT', 'target');
		count.query();
		while (count.next()){
			var item = {};
			//item.name = count.getDisplayValue('target').toString();
			if (count.target.user_name) {
				item.name = count.target.user_name;				
			} else {
				item.name = count.target.user_id;
			}
			
			item.points = 0;
			item.points = count.getAggregate('COUNT', 'target');
			items.push(item);
		}

		return items;
	}

	//⭐
	
	// updated live here: https://youtu.be/a9Dn_o5R_ck
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin-eduque</sys_created_by>
        <sys_created_on>2019-03-22 16:23:03</sys_created_on>
        <sys_id>65b55b1e4f9c7b0063c44beab110c79c</sys_id>
        <sys_mod_count>43</sys_mod_count>
        <sys_name>Points Leaderboard Recent</sys_name>
        <sys_package display_value="Slack Points Thing" source="x_snc_slack_points">4f6df3c813444f009718b9b76144b02c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Slack Points Thing">4f6df3c813444f009718b9b76144b02c</sys_scope>
        <sys_update_name>sp_widget_65b55b1e4f9c7b0063c44beab110c79c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-01-26 12:02:29</sys_updated_on>
        <template><![CDATA[<div class="panel panel-primary">
  <div class="panel-heading">Points Thing Leaderboard (Last 3 Months)</div>
  <div class="panel-body">
    <input class="form-control" type="search" placeholder="Start typing here to search for specific users" ng-model="c.data.keywords" ng-change="serverUpdate()" ng-model-options="{debounce: 250}" />
    <h5 ng-if="!c.data.keywords">Showing the top 100</h5>
    <ul class="list-group result-container">
      <li class="list-group-item all-users" ng-if="!c.data.keywords" ng-repeat="item in c.data.items">
        {{item.name}}<span class="pull-right">{{item.points}}</span>
      </li>
      <li class ="list-group-item" ng-if="c.data.keywords" ng-repeat="item in c.data.items">
        {{item.name}}<span class="pull-right">{{item.points}}</span>
      </li>
    </ul>
  </div>
  <div class="panel-footer" ng-if="c.data.keywords">
    <ng-pluralize count="c.data.items.length"
                  when="{'0': 'No items found for ',
                        '1': 'One item matching ',
                        'other': 'Found {} items matching '}">
    </ng-pluralize>
    {{c.data.keywords}}
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
